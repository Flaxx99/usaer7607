# Generated by Django 5.2.1 on 2025-05-27 16:04

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('escuelas', '0001_initial'),
        ('usuarios', '0002_remove_user_unique_numero_empleado_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='user',
            name='unique_numero_empleado',
        ),
        migrations.RemoveConstraint(
            model_name='user',
            name='unique_curp',
        ),
        migrations.RemoveConstraint(
            model_name='user',
            name='unique_rfc',
        ),
        migrations.AlterField(
            model_name='user',
            name='activo',
            field=models.BooleanField(default=True, help_text='Indica si el usuario está activo en el sistema', verbose_name='¿Activo?'),
        ),
        migrations.AlterField(
            model_name='user',
            name='apellido_materno',
            field=models.CharField(blank=True, help_text='Apellido materno del usuario', max_length=50, verbose_name='Apellido materno'),
        ),
        migrations.AlterField(
            model_name='user',
            name='apellido_paterno',
            field=models.CharField(help_text='Apellido paterno del usuario', max_length=50, verbose_name='Apellido paterno'),
        ),
        migrations.AlterField(
            model_name='user',
            name='celular',
            field=models.CharField(blank=True, help_text='Número de celular personal', max_length=15, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Celular'),
        ),
        migrations.AlterField(
            model_name='user',
            name='clave_presupuestal',
            field=models.CharField(blank=True, help_text='Clave presupuestal asignada por la SEP', max_length=30, verbose_name='Clave presupuestal'),
        ),
        migrations.AlterField(
            model_name='user',
            name='correo',
            field=models.EmailField(blank=True, help_text='Correo electrónico personal alternativo', max_length=254, verbose_name='Correo electrónico alterno'),
        ),
        migrations.AlterField(
            model_name='user',
            name='curp',
            field=models.CharField(blank=True, help_text='Clave Única de Registro de Población', max_length=18, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de CURP inválido. Debe seguir el formato oficial.', regex='^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z\\d]{2}$')], verbose_name='C.U.R.P.'),
        ),
        migrations.AlterField(
            model_name='user',
            name='domicilio',
            field=models.TextField(blank=True, help_text='Calle, número, colonia, código postal', verbose_name='Domicilio particular'),
        ),
        migrations.AlterField(
            model_name='user',
            name='escolaridad',
            field=models.CharField(blank=True, help_text='Grado máximo de estudios', max_length=100, verbose_name='Escolaridad'),
        ),
        migrations.AlterField(
            model_name='user',
            name='fecha_ingreso',
            field=models.DateField(blank=True, help_text='Fecha de ingreso al servicio educativo', null=True, verbose_name='Fecha de ingreso'),
        ),
        migrations.AlterField(
            model_name='user',
            name='grado',
            field=models.CharField(blank=True, help_text='Grados escolares que atiende (separados por comas)', max_length=30, verbose_name='Grado(s) que atiende'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario. Un usuario tendrá todos los permisos concedidos a cada uno de sus grupos.', related_name='usuarios_user_set', related_query_name='user', to='auth.group', verbose_name='Grupos'),
        ),
        migrations.AlterField(
            model_name='user',
            name='nivel',
            field=models.CharField(blank=True, choices=[('PRIM', 'Primaria'), ('SEC', 'Secundaria'), ('PRE', 'Preescolar'), ('ESP', 'Educación Especial'), ('FIS', 'Educación Física'), ('INI', 'Inicial')], help_text='Nivel educativo donde labora', max_length=4, verbose_name='Nivel educativo'),
        ),
        migrations.AlterField(
            model_name='user',
            name='nombre',
            field=models.CharField(help_text='Nombre(s) del usuario', max_length=50, verbose_name='Nombre(s)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='numero_empleado',
            field=models.CharField(blank=True, help_text='Número único de empleado en el sistema', max_length=20, unique=True, verbose_name='Número de empleado'),
        ),
        migrations.AlterField(
            model_name='user',
            name='numero_pensiones',
            field=models.CharField(blank=True, help_text='Número de pensión o seguro social', max_length=20, verbose_name='Número de pensiones'),
        ),
        migrations.AlterField(
            model_name='user',
            name='puesto',
            field=models.CharField(blank=True, choices=[('MAESTRO', 'Maestro de Grupo'), ('APOYO', 'Maestro de Apoyo'), ('PSIC', 'Psicólogo'), ('PSICO', 'Psicomotricista'), ('TRAB', 'Trabajador Social'), ('DIR', 'Director'), ('SUBDIR', 'Subdirector'), ('ADMIN', 'Personal Administrativo'), ('INT', 'Intendente'), ('EDFIS', 'Docente Educación Física')], help_text='Puesto que desempeña en la institución', max_length=10, verbose_name='Puesto'),
        ),
        migrations.AlterField(
            model_name='user',
            name='rfc',
            field=models.CharField(blank=True, help_text='Registro Federal de Contribuyentes', max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de RFC inválido. Debe seguir el formato oficial.', regex='^[A-ZÑ&]{3,4}\\d{6}[A-Z0-9]{2}[0-9A]$')], verbose_name='R.F.C.'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('DIRECTOR', 'Director'), ('PROFESOR', 'Profesor'), ('SECRETARIO', 'Secretario'), ('ADMIN', 'Personal Administrativo'), ('SUPERVISOR', 'Supervisor Escolar')], db_index=True, default='PROFESOR', max_length=10, verbose_name='Rol'),
        ),
        migrations.AlterField(
            model_name='user',
            name='situacion',
            field=models.CharField(blank=True, choices=[('BASE', 'Base'), ('HORAS', 'Por Horas'), ('INTER', 'Interino'), ('CONT', 'Por Contrato'), ('SUPL', 'Suplente'), ('COM', 'Comisionado')], help_text='Situación contractual del empleado', max_length=5, verbose_name='Situación laboral'),
        ),
        migrations.AlterField(
            model_name='user',
            name='telefono',
            field=models.CharField(blank=True, help_text='Teléfono fijo de contacto', max_length=15, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono particular'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='usuarios_user_permissions_set', related_query_name='user', to='auth.permission', verbose_name='Permisos de usuario'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='usuarios_us_role_69e80f_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['escuela'], name='usuarios_us_escuela_8b6426_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['numero_empleado'], name='usuarios_us_numero__38fd72_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(condition=models.Q(('numero_empleado__isnull', False)), fields=('numero_empleado',), name='unique_numero_empleado'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(condition=models.Q(('curp__isnull', False)), fields=('curp',), name='unique_curp'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(condition=models.Q(('rfc__isnull', False)), fields=('rfc',), name='unique_rfc'),
        ),
    ]
