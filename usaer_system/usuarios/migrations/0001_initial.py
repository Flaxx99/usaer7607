# Generated by Django 5.2.1 on 2025-05-27 15:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('escuelas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('DIRECTOR', 'Director'), ('PROFESOR', 'Profesor'), ('SECRETARIO', 'Secretario'), ('ADMIN', 'Personal Administrativo')], default='PROFESOR', max_length=10, verbose_name='Rol')),
                ('nombre', models.CharField(blank=True, max_length=50, verbose_name='Nombre(s)')),
                ('apellido_paterno', models.CharField(blank=True, max_length=50, verbose_name='Apellido paterno')),
                ('apellido_materno', models.CharField(blank=True, max_length=50, verbose_name='Apellido materno')),
                ('domicilio', models.TextField(blank=True, verbose_name='Domicilio particular')),
                ('telefono', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono particular')),
                ('celular', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Celular')),
                ('correo', models.EmailField(blank=True, max_length=254, verbose_name='Correo electrónico alterno')),
                ('rfc', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de RFC inválido', regex='^[A-Z&Ñ]{3,4}\\d{6}[A-Z0-9]{3}$')], verbose_name='R.F.C.')),
                ('curp', models.CharField(blank=True, max_length=18, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de CURP inválido', regex='^[A-Z]{4}\\d{6}[A-Z]{6}[A-Z\\d]{2}$')], verbose_name='C.U.R.P.')),
                ('clave_presupuestal', models.CharField(blank=True, max_length=30, verbose_name='Clave presupuestal')),
                ('numero_empleado', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Número de empleado')),
                ('numero_pensiones', models.CharField(blank=True, max_length=20, verbose_name='Número de pensiones')),
                ('nivel', models.CharField(blank=True, choices=[('PRIM', 'Primaria'), ('SEC', 'Secundaria'), ('PRE', 'Preescolar'), ('ESP', 'Educación Especial')], max_length=4, verbose_name='Nivel educativo')),
                ('grado', models.CharField(blank=True, max_length=30, verbose_name='Grado(s) que atiende')),
                ('puesto', models.CharField(blank=True, choices=[('MAESTRO', 'Maestro de Grupo'), ('APOYO', 'Maestro de Apoyo'), ('PSIC', 'Psicólogo'), ('PSICO', 'Psicomotricista'), ('TRAB', 'Trabajador Social'), ('DIR', 'Director'), ('SUBDIR', 'Subdirector'), ('ADMIN', 'Personal Administrativo')], max_length=10, verbose_name='Puesto')),
                ('situacion', models.CharField(blank=True, choices=[('BASE', 'Base'), ('HORAS', 'Por Horas'), ('INTER', 'Interino'), ('CONT', 'Por Contrato')], max_length=5, verbose_name='Situación laboral')),
                ('escolaridad', models.CharField(blank=True, max_length=100, verbose_name='Escolaridad')),
                ('fecha_ingreso', models.DateField(blank=True, null=True, verbose_name='Fecha de ingreso')),
                ('activo', models.BooleanField(default=True, verbose_name='¿Activo?')),
                ('escuela', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal', to='escuelas.escuela', verbose_name='Escuela asignada')),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario.', related_name='usuarios_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='usuarios_user_permissions_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['apellido_paterno', 'apellido_materno', 'nombre'],
                'constraints': [
                    models.UniqueConstraint(fields=['numero_empleado'], name='unique_numero_empleado'),
                    models.UniqueConstraint(fields=['curp'], name='unique_curp'),
                    models.UniqueConstraint(fields=['rfc'], name='unique_rfc'),
                ],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
